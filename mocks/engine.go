// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/sclevine/cflocal/local (interfaces: Engine)

package mocks

import (
	container "github.com/docker/docker/api/types/container"
	gomock "github.com/golang/mock/gomock"
	local "github.com/sclevine/cflocal/local"
)

// Mock of Engine interface
type MockEngine struct {
	ctrl     *gomock.Controller
	recorder *_MockEngineRecorder
}

// Recorder for MockEngine (not exported)
type _MockEngineRecorder struct {
	mock *MockEngine
}

func NewMockEngine(ctrl *gomock.Controller) *MockEngine {
	mock := &MockEngine{ctrl: ctrl}
	mock.recorder = &_MockEngineRecorder{mock}
	return mock
}

func (_m *MockEngine) EXPECT() *_MockEngineRecorder {
	return _m.recorder
}

func (_m *MockEngine) NewContainer(_param0 *container.Config, _param1 *container.HostConfig) (local.Container, error) {
	ret := _m.ctrl.Call(_m, "NewContainer", _param0, _param1)
	ret0, _ := ret[0].(local.Container)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockEngineRecorder) NewContainer(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewContainer", arg0, arg1)
}
