// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/sclevine/forge (interfaces: Image)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	engine "github.com/sclevine/forge/engine"
)

// Mock of Image interface
type MockImage struct {
	ctrl     *gomock.Controller
	recorder *_MockImageRecorder
}

// Recorder for MockImage (not exported)
type _MockImageRecorder struct {
	mock *MockImage
}

func NewMockImage(ctrl *gomock.Controller) *MockImage {
	mock := &MockImage{ctrl: ctrl}
	mock.recorder = &_MockImageRecorder{mock}
	return mock
}

func (_m *MockImage) EXPECT() *_MockImageRecorder {
	return _m.recorder
}

func (_m *MockImage) Build(_param0 string, _param1 engine.Stream) <-chan engine.Progress {
	ret := _m.ctrl.Call(_m, "Build", _param0, _param1)
	ret0, _ := ret[0].(<-chan engine.Progress)
	return ret0
}

func (_mr *_MockImageRecorder) Build(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Build", arg0, arg1)
}

func (_m *MockImage) Pull(_param0 string) <-chan engine.Progress {
	ret := _m.ctrl.Call(_m, "Pull", _param0)
	ret0, _ := ret[0].(<-chan engine.Progress)
	return ret0
}

func (_mr *_MockImageRecorder) Pull(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Pull", arg0)
}
