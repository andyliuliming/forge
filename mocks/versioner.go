// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sclevine/forge (interfaces: Versioner)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVersioner is a mock of Versioner interface
type MockVersioner struct {
	ctrl     *gomock.Controller
	recorder *MockVersionerMockRecorder
}

// MockVersionerMockRecorder is the mock recorder for MockVersioner
type MockVersionerMockRecorder struct {
	mock *MockVersioner
}

// NewMockVersioner creates a new mock instance
func NewMockVersioner(ctrl *gomock.Controller) *MockVersioner {
	mock := &MockVersioner{ctrl: ctrl}
	mock.recorder = &MockVersionerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersioner) EXPECT() *MockVersionerMockRecorder {
	return m.recorder
}

// Build mocks base method
func (m *MockVersioner) Build(arg0, arg1 string) (string, error) {
	ret := m.ctrl.Call(m, "Build", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build
func (mr *MockVersionerMockRecorder) Build(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockVersioner)(nil).Build), arg0, arg1)
}
